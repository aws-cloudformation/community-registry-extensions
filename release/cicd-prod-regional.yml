AWSTemplateFormatVersion: "2010-09-09"
Description: Regional infrastructure for the community registry extensions CICD in the prod account for publishing across all regions

Parameters:

  Prefix:
    Type: String
    Description: The extension prefix, for example, AwsCommunity

  PrefixLower:
    Type: String
    Description: The extension prefix lowercase, for example, awscommunity.

  PublishBuildBucketName:
    Type: String
    Description: The name of the bucket to drop builds from the beta account when all integ tests succeed. In prod it should be community-registry-extensions-publish-build

  HandlerBucketName:
    Type: String
    Description: The name of the handler package bucket. For prod it should be community-registry-extensions-prod-handler

  BetaAccountId:
    Type: String
    Description: AccountId for the beta account, which pushes builds to the PublishBuildBucket 
  

Resources:

  DeleteBucketContentsBuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: '2012-10-17'

  CommonBuildProjectPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource: "*"
          - Action:
              - kms:CreateKey
              - kms:DeleteKey
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource: "*"
          - Action:
              - iam:CreateRole
              - iam:DeleteRole
              - iam:GetRole
              - iam:PutRolePolicy
              - iam:DeleteRolePolicy
              - iam:GetRolePolicy
              - iam:PassRole
            Effect: Allow
            Resource: 
              - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${PrefixLower}*'
              - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudFormation*'
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: 
              - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'

          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource: 
              - !Sub 'arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*'
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - !GetAtt ArtifactBucket.Arn
              - !Sub "${ArtifactBucket.Arn}/*"
              - !Sub "arn:aws:s3:::${HandlerBucketName}"
              - !Sub "arn:aws:s3:::${HandlerBucketName}/*"
          - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/setup-${PrefixLower}*'
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/integ-*'
          - Action:
              - cloudformation:ListExports
              - cloudformation:DescribeStacks
              - cloudformation:DescribeType
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:UpdateStack
            Effect: Allow
            Resource: 
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${PrefixLower}*'
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/CloudFormationManagedUploadInfrastructure/*'
          - Action:
              - cloudformation:RegisterType
              - cloudformation:DescribeTypeRegistration
              - cloudformation:SetTypeDefaultVersion
              - cloudformation:SetTypeConfiguration
              - cloudformation:DescribeType
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:type/RESOURCE/${Prefix}*'
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:type/resource/${Prefix}*'
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:type/HOOK/${Prefix}*'
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:type/hook/${Prefix}*'
          - Action:
              - cloudformation:DescribeTypeRegistration
              - cloudformation:DescribeType
              - cloudformation:ListTypes
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
        Version: '2012-10-17'
      PolicyName: common-build-project-policy
      Roles:
        - !Ref DeleteBucketContentsBuildProjectRole

  DeleteBucketContentsBuildProjectPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:CreateRole
              - iam:DeleteRole
              - iam:GetRole
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:ListBucket
              - s3:GetBucketNotification
              - s3:PutBucketNotification
              - s3:GetBucketTagging
              - s3:PutBucketTagging
              - s3:ListObjectVersions
              - s3:DeleteObject
              - s3:ListBucketVersions
            Effect: Allow
            Resource: "*"
        Version: '2012-10-17'
      PolicyName: delete-bucket-contents-build-project-policy
      Roles:
        - !Ref DeleteBucketContentsBuildProjectRole

  DeleteBucketContentsBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/cep-cicd:latest"
        ImagePullCredentialsType: SERVICE_ROLE
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: RESOURCE_PATH
          Type: PLAINTEXT
          Value: "placeholder-for-path-to-resource"
      ServiceRole: !GetAtt DeleteBucketContentsBuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: "resources/prod-buildspec-python.yml"

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: '2012-10-17'

  PipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: extension-pipeline-policy
      Roles: 
        - !Ref PipelineRole
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - !GetAtt ArtifactBucket.Arn
              - !Join
                - ''
                - - !GetAtt ArtifactBucket.Arn
                  - /*
              - !Sub "arn:aws:s3:::${PublishBuildBucketName}"
              - !Sub "arn:aws:s3:::${PublishBuildBucketName}/*"
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Effect: Allow
            Resource: 
              - !GetAtt DeleteBucketContentsBuildProject.Arn
          - Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Effect: Allow
            Resource:
              - !Sub "arn:aws:kms:${AWS::Region}:${BetaAccountId}:key/*"

  ArtifactBucket:
    Type: AWS::S3::Bucket

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: S3Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration: 
                S3Bucket: !Ref PublishBuildBucketName
                S3ObjectKey: "build.zip" 
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: extensions-build 
        - Name: Build
          Actions:
            - Name: DeleteBucketContents
              InputArtifacts:
                - Name: extensions-build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref DeleteBucketContentsBuildProject
                EnvironmentVariables: |-
                  [
                    {
                      "name": "RESOURCE_PATH",
                      "type": "PLAINTEXT",
                      "value": "resources/S3_DeleteBucketContents"
                    }
                  ]
              RunOrder: 1

  BuildEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - 'AWS API Call via CloudTrail'
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - CopyObject
            - PutObject
            - CompleteMultipartUpload
          requestParameters:
            bucketName:
              - !Ref PublishBuildBucketName
            key:
              - "build.zip" 
      Targets:
        -
          Arn:
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]
          RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/community-registry-extensions-cloudwatch-role" 
          Id: codepipeline-Pipeline


