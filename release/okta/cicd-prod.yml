AWSTemplateFormatVersion: "2010-09-09"
Description: Common infrastructure for the Okta community registry extensions CICD in the prod account for publishing across all regions

Parameters:

  HandlerBucketName:
    Type: String
    Description: The name of the handler package bucket. For prod it should be community-registry-extensions-prod-handler.

  PublishBuildBucketName:
    Type: String
    Description: The name of the bucket to drop builds from the beta account when all integ tests succeed. In prod it should be community-registry-extensions-publish-build

  BetaAccountId:
    Type: String
    Description: AccountId for the beta account, which pushes builds to the PublishBuildBucket 

Resources:

  PublishBuildBucketPolicy:
    Metadata:
      Comment: Allows the beta account to drop builds into the prod account.
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PublishBuildBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: BetaAccountPut
            Effect: Allow
            Principal:
              AWS: 
                - !Sub "arn:aws:iam::${BetaAccountId}:role/cep-okta-publish-role" 
                - !GetAtt PublishCrossAccountRole.Arn
            Action: s3:PutObject
            Resource: 
              - !Sub "arn:aws:s3:::${PublishBuildBucket}" 
              - !Sub "arn:aws:s3:::${PublishBuildBucket}/*" 

  PublishBuildBucket:
    Type: AWS::S3::Bucket
    Metadata:
      Comment: This bucket initiates the publishing process in the prod account when a file called build.zip is dropped from the beta account
    Properties:
      BucketName: !Ref PublishBuildBucketName
      VersioningConfiguration: 
        Status: Enabled

  ArtifactBucket:
    Type: AWS::S3::Bucket

  HandlerBucket:
    Type: AWS::S3::Bucket
    Metadata:
      Comment: This bucket holds the handler package and logs for `release/publish.sh`
    Properties:
      BucketName: !Ref HandlerBucketName

  StackSetAdministrationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AWSCloudFormationStackSetAdministrationRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AssumeRole-AWSCloudFormationStackSetExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/AWSCloudFormationStackSetExecutionRole"

  StackSetExecutionRole:
    Type: AWS::IAM::Role
    Metadata:
      Comment: We can limit this role to this account, since we are using stack sets to deploy across all regions, but not to multiple accounts
    Properties:
      RoleName: AWSCloudFormationStackSetExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "${AWS::AccountId}"
            Action:
              - sts:AssumeRole
      Path: /

  StackSetExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref StackSetExecutionRole
      PolicyName: cep-stack-set-execution
      PolicyDocument:
        Statement:
          - Action:
              - iam:CreateRole
              - iam:DeleteRole
              - iam:GetRole
              - iam:PutRolePolicy
              - iam:DeleteRolePolicy
              - iam:GetRolePolicy
              - iam:PassRole
            Effect: Allow
            Resource: "*"
          - Action:
              - codebuild:*
            Effect: Allow
            Resource: "*" 
          - Action:
              - codepipeline:*
            Effect: Allow
            Resource: "*"
          - Action: 
              - s3:*
            Effect: Allow
            Resource: "*"
          - Action:
              - events:*
            Effect: Allow
            Resource: "*"
          - Action:
              - cloudformation:*
            Effect: Allow
            Resource: "*"
          - Action:
              - sns:*
            Effect: Allow
            Resource: "*"

  PublishCrossAccountRole:
    Type: AWS::IAM::Role
    Metadata:
      Comment: Assumed by codepipeline in the beta account to access the publish bucket
    Properties:
      RoleName: community-registry-extensions-publish-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                #- !Sub "arn:aws:iam::${BetaAccountId}:role/cep-beta-pipeline-role"
                # Circular reference with this and cicd.yml in sandbox deployment
                - !Sub "arn:aws:iam::${BetaAccountId}:root"
            Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: cross-account-pipeline-deploy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - s3:Get*
                  - s3:List*
                  - s3:Put*
                Effect: Allow
                Resource:
                  - !Sub "arn:aws:s3:::${PublishBuildBucketName}"
                  - !Sub "arn:aws:s3:::${PublishBuildBucketName}/*"
                  - !Sub "arn:aws:s3:::cep-okta-beta-${BetaAccountId}-artifact-bucket"
                  - !Sub "arn:aws:s3:::cep-okta-beta-${BetaAccountId}-artifact-bucket/*"
              - Action: 
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                Effect: Allow
                Resource: 
                  - !Sub "arn:aws:kms:${AWS::Region}:${BetaAccountId}:key/*"
              



